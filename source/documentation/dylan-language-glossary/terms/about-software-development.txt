.. About this file
  - contains one (!) glossary entry in the ReSTructed format  
  - the glossary entry will be fetched by a `include` 
    directive of Sphinx.
  write 0 whitespaces in front of the label
  write 2 whitespaces infront of description.

.. _dylan-term-about-software-development:

Abouut software development
---------------------------

  One of the most ubiquitous activities in software development is
  
- *structuring data*. 

  Once the structure of the data has been decided on,  a programmer
  adds
 
  - *functionality* to the datatypes

  Part of the reason that the datatype is typically designed in the first
  place is, that always some functionality is specific to a datatype.


  The most important features that support these activities are
 
  - a types system equipped with parametric polymorphism

  - higher-order functions


  The dylan language design is *centered around methods*,
  not around *classes*. These enables dylan to provide
  a central feature for *generic programming*:

  

  The dylan language supports parametric polymorphism by writing
  *generic functions* for types classes.

  Classic examples of such generic functionality are

  - getter generic function of a slot
  - setter generic function of a slot

  The dylan language implements the 
  :ref:`object-oriented paradigma of programming
  <dylan-term-object-oriented-paradigma-of-programming>`, 
  but its design is *centered around methods*, 
  not centered around *classes* as it is 
  done in the current mainstream object-oriented languages. 





  
