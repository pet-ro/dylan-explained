.. About this file
  - contains one (!) glossary entry in the ReSTructed format  
  - the glossary entry will be fetched by a `include` 
    directive of Sphinx.
  write 0 whitespaces in front of the label
  write 2 whitespaces infront of description.

.. _dylan-term-sealing:

sealing techniques
------------------

  Sealing techniques enable a range of compiler optimizations 
  and support security of software components.

.. _dylan-term-sealing(intro):


  The :ref:`sealing techniques
  <dylan-term-sealing>`
  of the dylan language are based on *three different aspects*.
 
  - first we introduce the three aspects via the *adjective pairs* 
    used in the dylan language
  - then we explain what each pair controls

.. _dylan-term-sealing(intro-adjective-pairs):


  Each  adjective pairs reflects a different sealing technique  

  - :ref:`sealed
    <dylan-term-sealed-constructs>`
    or 
    *open*.

  - :ref:`abstract
    <dylan-term-abstract-class>` 
    or
    :ref:`concrete
    <dylan-term-concrete-class>`

  - :ref:`primary
    <dylan-term-primary-class>`
    or
    :ref:`free
    <dylan-term-free-class>`

.. _dylan-term-sealing(detailed):

  The adjective pairs and their sealing techique described more detailed:

.. _dylan-term-sealing(detailed-adjective-pair-sealed-or-open):

  - The adjective pair
    :ref:`sealed
    <dylan-term-sealed-constructs>`
    or 
    *open*.

  

    - The *adjective pair* reflects a sealing technique which 
      is based on whether a :ref:`compilation unit
      <dylan-term-compilation-unit>` is sealed.

      - See :ref:`sealed language constructs
        <dylan-term-sealed-constructs>`
      


.. _dylan-term-sealing(detailed-adjective-pair-abstract-or-concrete):
    
  - The adjective pair
    :ref:`abstract
    <dylan-term-abstract-class>` 
    or
    :ref:`concrete
    <dylan-term-concrete-class>`
   
    - This adjective pair reflects a sealing technique which 
      is based on whether a :ref:`class
      <dylan-term-class>`
      can have direct 
      :ref:`instance creation
      <dylan-term-instance-creation>`.


.. _dylan-term-sealing(detailed-adjective-pair-primary--or-free):

  - The adjective pair 
    :ref:`primary
    <dylan-term-primary-class>`
    or
    :ref:`free
    <dylan-term-free-class>`

    - The adjective pair reflects a sealing technique which 
      is based on how a :ref:`class
      <dylan-term-class>` 
      can be used for 
      :ref:`multiple inheritance
      <dylan-term-multiple-inheritance>`.
   

